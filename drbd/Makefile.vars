# Makefile.vars
#
# This file is part of drbd by Philipp Reisner
#
# drbd is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# drbd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with drbd; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#

ifneq ($(DRBD_MAKEFILE_VARS),included)
DRBD_MAKEFILE_VARS:=included

# export all variables not explicitly _un_exported
export

# Available DEBUGFLAGS:
# -g                   for more comfort in UML/gdb
# -DDDBG_ALL_SYMBOLS   no static functions, improves quality of OOPS traces
# -DDBG_SPINLOCKS      enables MUST_HOLD macro
# -DDBG_ASSERTS        funtion drbd_assert_breakpoint() for setting breakpoint
# -DDBG_BH_SECTOR      enables checks in BH_SECTOR macro

DEBUGFLAGS      := -g -DDBG_ALL_SYMBOLS -DDBG_SPINLOCKS -DDBG_BH_SECTOR
#DEBUGFLAGS      := 

PREFIX          := /

REL_VERSION	:= 0.7-pre1
API_VERSION     := 70
PRO_VERSION     := 70

CC           	:= gcc
USERFLAGS    	:= -Wall $(DEBUGFLAGS)

DB2MAN          := $(shell which 2>/dev/null docbook2man)
DB2HTML         := $(shell which 2>/dev/null docbook2html)
DB2PDF          := $(shell which 2>/dev/null docbook2pdf)
DB2PS           := $(shell which 2>/dev/null docbook2ps)

# some commands for rpm target
LN_S            = ln -s
RPMBUILD        = $(shell which 2>/dev/null rpmbuild||which 2>/dev/null rpm)

## Magic starts here:
DIST            :=$(strip \
  $(if $(wildcard /etc/debian_version),debian,\
  $(if $(wildcard /etc/redhat-release),redhat,\
  $(if $(wildcard /etc/slackware-version),slackware,\
  $(if $(wildcard /etc/ROCK-VERSION),rock,\
  $(if $(wildcard /var/lib/YaST*),suse,))))))
SMPFLAG         := $(shell if uname -a | grep SMP > /dev/null; then echo "-D__SMP__"; fi)
ARCH 		:= $(shell uname -m | sed -e 's/i.86/i386/;s/sun4u/sparc64/;s/arm.*/arm/;s/sa110/arm/')
KERNVER      	:= $(shell uname -r)
MAJOR	     	:= $(word 1,$(subst ., ,$(KERNVER)))
MINOR	     	:= $(word 2,$(subst ., ,$(KERNVER)))
#----- Flags for different architectures
KAF_alpha       := -ffixed-8 -mno-fp-regs # -Wa,-m21164a -mcpu=ev56
#KAF_i386        := -m486 -DCPU=586 -malign-loops=2 -malign-jumps=2 -malign-functions=2 -fomit-frame-pointer #-fno-strict-aliasing
KAF_i386        := -fno-strict-aliasing -mpreferred-stack-boundary=2
KAF_ppc         := -D__powerpc__ -fsigned-char -msoft-float -mmultiple -mstring
KAF_sparc64     := -m64 -ffixed-g4 # probably some more, but this works...
KAF_arm         :=#please contribute
#-----
#LINUX = /usr/src/linux-2.4.19-uml
#INCLUDE         := -I$(LINUX)/include -I$(LINUX)/arch/um/include/
#INCLUDE         += -I$(LINUX)/arch/um/kernel/tt/include/
#INCLUDE         += -I$(LINUX)/arch/um/kernel/skas/include/
#INCLUDE         += -D__arch_um__

LINUX := $(firstword \
  $(wildcard /lib/modules/$(KERNVER)/build)\
  $(wildcard /usr/src/linux)\
  $(wildcard /usr/src/linux-2.4))
INCLUDE         := -I$(LINUX)/include

VERSIONFLAGS    := -DAPI_VERSION=$(API_VERSION) -DPRO_VERSION=$(PRO_VERSION)
VERSIONFLAGS    += -DREL_VERSION=\"$(REL_VERSION)\"
KERNFLAGS    	:= -D__KERNEL__ -DMODULE 
KERNFLAGS	+=\
$(if $(wildcard $(LINUX)/include/linux/modversions.h),\
  -DMODVERSIONS -DCONFIG_MODVERSIONS\
  -include $(LINUX)/include/linux/modversions.h,)
KERNFLAGS	+= -O2 -Wall $(DEBUGFLAGS) $(KAF_$(ARCH)) $(INCLUDE) $(SMPFLAG)

SUBDIRS = user drbd scripts benchmark documentation #testing
ALLSUBDIRS = user drbd scripts benchmark documentation testing

endif
